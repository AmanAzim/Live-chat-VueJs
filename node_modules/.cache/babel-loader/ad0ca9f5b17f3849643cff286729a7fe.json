{"remainingRequest":"D:\\VueJs-Training\\live-chat-vuejs\\node_modules\\babel-loader\\lib\\index.js!D:\\VueJs-Training\\live-chat-vuejs\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\VueJs-Training\\live-chat-vuejs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\VueJs-Training\\live-chat-vuejs\\src\\views\\Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\VueJs-Training\\live-chat-vuejs\\src\\views\\Chat.vue","mtime":1560633772370},{"path":"D:\\VueJs-Training\\live-chat-vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\VueJs-Training\\live-chat-vuejs\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\VueJs-Training\\live-chat-vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\VueJs-Training\\live-chat-vuejs\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CreateMessage from \"../components/CreateMessage.vue\";\nimport Fb from \"../firebase/index\";\nimport moment from \"moment\";\nexport default {\n  components: {\n    CreateMessage: CreateMessage\n  },\n  props: ['name'],\n  data: function data() {\n    return {\n      messages: []\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    var ref = Fb.collection(\"messages\").orderBy('timestamp'); //\"collection('name_of_collestion')\" it will allow us to access the collection of our need\n\n    /*\n      //This will retrieve all the data\n      Fb.collection(\"messages\").orderBy('timestamp').get().then((querySnapshot) =>{\n          querySnapshot.forEach((doc) => {\n              console.log('doc',doc);\n             // if(doc.type=='added'){//only the newly added message\n                  //let doc1=doc.doc;\n                  this.messages.push({\n                      id:doc.id,\n                      name:doc.data().name,\n                      message:doc.data().message,\n                      timestamp:moment(doc.data().timestamp).format('LTS')//format() Giges the time as string\n                  })\n              //}\n          });\n      });*/\n\n    ref.onSnapshot(function (snapshot) {\n      //will provide the snap shot of the collection stored on Firebase on each update\n      snapshot.docChanges().forEach(function (change) {\n        //iterating through all the messages collection\n        //console.log('changes',change);\n        if (change.type == 'added') {\n          //only the newly added message\n          _this.messages.push({\n            id: change.doc.id,\n            name: change.doc.data().name,\n            message: change.doc.data().message,\n            timestamp: moment(change.doc.data().timestamp).format('LTS') //format() Giges the time as string\n\n          });\n        }\n      });\n    });\n  }\n};",{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAuBA,OAAA,aAAA;AACA,OAAA,EAAA;AACA,OAAA,MAAA,MAAA,QAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA;AADA,GADA;AAIA,EAAA,KAAA,EAAA,CAAA,MAAA,CAJA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AADA,KAAA;AAGA,GATA;AAUA,EAAA,OAVA,qBAUA;AAAA;;AACA,QAAA,GAAA,GAAA,EAAA,CAAA,UAAA,CAAA,UAAA,EAAA,OAAA,CAAA,WAAA,CAAA,CADA,CACA;;AAEA;;;;;;;;;;;;;;;;;AAiBA,IAAA,GAAA,CAAA,UAAA,CAAA,UAAA,QAAA,EAAA;AAAA;AACA,MAAA,QAAA,CAAA,UAAA,GAAA,OAAA,CAAA,UAAA,MAAA,EAAA;AAAA;AACA;AACA,YAAA,MAAA,CAAA,IAAA,IAAA,OAAA,EAAA;AAAA;AACA,UAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA;AACA,YAAA,EAAA,EAAA,MAAA,CAAA,GAAA,CAAA,EADA;AAEA,YAAA,IAAA,EAAA,MAAA,CAAA,GAAA,CAAA,IAAA,GAAA,IAFA;AAGA,YAAA,OAAA,EAAA,MAAA,CAAA,GAAA,CAAA,IAAA,GAAA,OAHA;AAIA,YAAA,SAAA,EAAA,MAAA,CAAA,MAAA,CAAA,GAAA,CAAA,IAAA,GAAA,SAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAJA,CAIA;;AAJA,WAAA;AAMA;AACA,OAVA;AAWA,KAZA;AAaA;AA3CA,CAAA","sourcesContent":["<template>\r\n    <div class=\"container chat\">\r\n        <h2 class=\"text-primary text-center\">Real-Time Chat</h2>\r\n        <h5 class=\"text-secondary text-center\">Powered by Vue.js & Firebase</h5>\r\n        <div class=\"cart\">\r\n            <div class=\"cart-body\">\r\n                <p class=\"text-secondary noMessages\" v-if=\"messages.length===0\">[no messages yet!]</p>\r\n                <div class=\"messages\" v-chat-scroll=\"{always:false, smooth:true}\">\r\n                    <div v-for=\"message in messages\" :key=\"message.id\">\r\n                        <span class=\"text-info\">[{{message.name}}]</span>\r\n                        <span>{{message.message}}</span>\r\n                        <span class=\"text-secondary time\">{{message.timestamp}}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"cart-action\">\r\n                <CreateMessage :name=\"name\"/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import CreateMessage from \"../components/CreateMessage.vue\";\r\n    import Fb from '../firebase/index';\r\n    import moment from \"moment\";\r\n    export default {\r\n        components:{\r\n            CreateMessage,\r\n        },\r\n        props:['name'],\r\n        data(){\r\n            return {\r\n                messages:[]\r\n            }\r\n        },\r\n        created() {\r\n            let ref=Fb.collection(\"messages\").orderBy('timestamp');//\"collection('name_of_collestion')\" it will allow us to access the collection of our need\r\n\r\n          /*\r\n            //This will retrieve all the data\r\n            Fb.collection(\"messages\").orderBy('timestamp').get().then((querySnapshot) =>{\r\n                querySnapshot.forEach((doc) => {\r\n                    console.log('doc',doc);\r\n                   // if(doc.type=='added'){//only the newly added message\r\n                        //let doc1=doc.doc;\r\n                        this.messages.push({\r\n                            id:doc.id,\r\n                            name:doc.data().name,\r\n                            message:doc.data().message,\r\n                            timestamp:moment(doc.data().timestamp).format('LTS')//format() Giges the time as string\r\n                        })\r\n                    //}\r\n                });\r\n            });*/\r\n\r\n            ref.onSnapshot((snapshot)=>{//will provide the snap shot of the collection stored on Firebase on each update\r\n                snapshot.docChanges().forEach(change=>{//iterating through all the messages collection\r\n                    //console.log('changes',change);\r\n                    if(change.type=='added'){//only the newly added message\r\n                        this.messages.push({\r\n                            id:change.doc.id,\r\n                            name:change.doc.data().name,\r\n                            message:change.doc.data().message,\r\n                            timestamp:moment(change.doc.data().timestamp).format('LTS')//format() Giges the time as string\r\n                        })\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .chat h2{\r\n        font-size: 2.6em;\r\n        margin-bottom: 0px;\r\n\r\n    }\r\n    .chat h5{\r\n        margin-top: 0px;\r\n        margin-bottom: 40px;\r\n    }\r\n    .chat span {\r\n        font-size: 1.2em;\r\n    }\r\n    .chat .time{\r\n        display: block;\r\n        font-size: 0.7em;\r\n    }\r\n    .messages {\r\n        max-height: 300px;\r\n        overflow: auto;\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/views"}]}